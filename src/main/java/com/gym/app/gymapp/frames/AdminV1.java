/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gym.app.gymapp.frames;

import com.gym.app.gymapp.classes.Administrador;
import com.gym.app.gymapp.features.AdminDAO;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class AdminV1 extends javax.swing.JFrame {

    int xMouse, yMouse;

    public AdminV1() {
        initComponents();
        txtContrasena.setEnabled(false);
        cargarUsuario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNameAdmin = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtLastnameAdmin = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtAgeAdmin = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtPhoneAdmin = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        txtMailAdmin = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        txtIdAdmin = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        txtContrasena = new javax.swing.JPasswordField();
        btnGuardarAdmin = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdmin = new javax.swing.JTable();
        header = new javax.swing.JPanel();
        btnVolver = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNameAdmin.setBackground(new java.awt.Color(255, 255, 255));
        txtNameAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtNameAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtNameAdmin.setText("Ingrese el nombre");
        txtNameAdmin.setBorder(null);
        txtNameAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNameAdminMousePressed(evt);
            }
        });
        txtNameAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameAdminActionPerformed(evt);
            }
        });
        jPanel1.add(txtNameAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 230, 30));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 230, 20));

        jLabel1.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Nombre");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 60, 30));

        jLabel2.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Apellido");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 60, 30));

        txtLastnameAdmin.setBackground(new java.awt.Color(255, 255, 255));
        txtLastnameAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtLastnameAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtLastnameAdmin.setText("Ingrese el apellido");
        txtLastnameAdmin.setBorder(null);
        txtLastnameAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtLastnameAdminMousePressed(evt);
            }
        });
        txtLastnameAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastnameAdminActionPerformed(evt);
            }
        });
        jPanel1.add(txtLastnameAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 230, 30));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 230, 20));

        jLabel3.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Edad");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 40, 30));

        txtAgeAdmin.setBackground(new java.awt.Color(255, 255, 255));
        txtAgeAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtAgeAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtAgeAdmin.setText("Ingrese la edad");
        txtAgeAdmin.setBorder(null);
        txtAgeAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtAgeAdminMousePressed(evt);
            }
        });
        jPanel1.add(txtAgeAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 230, 30));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 230, 20));

        jLabel4.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Telefono");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 60, 30));

        txtPhoneAdmin.setBackground(new java.awt.Color(255, 255, 255));
        txtPhoneAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtPhoneAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtPhoneAdmin.setText("Ingrese el telefono");
        txtPhoneAdmin.setBorder(null);
        txtPhoneAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPhoneAdminMousePressed(evt);
            }
        });
        jPanel1.add(txtPhoneAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 230, 30));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 230, 20));

        jLabel5.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Correo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 50, 30));

        txtMailAdmin.setBackground(new java.awt.Color(255, 255, 255));
        txtMailAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtMailAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtMailAdmin.setText("Ingrese el correo");
        txtMailAdmin.setBorder(null);
        txtMailAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtMailAdminMousePressed(evt);
            }
        });
        txtMailAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMailAdminActionPerformed(evt);
            }
        });
        jPanel1.add(txtMailAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 230, 30));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 230, 20));

        jLabel6.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("ID");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 20, 30));

        txtIdAdmin.setBackground(new java.awt.Color(255, 255, 255));
        txtIdAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtIdAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtIdAdmin.setText("Ingrese el ID");
        txtIdAdmin.setBorder(null);
        txtIdAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdAdminMousePressed(evt);
            }
        });
        jPanel1.add(txtIdAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 230, 30));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 230, 20));

        jLabel7.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Contraseña");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 80, 30));
        jPanel1.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 230, 20));

        txtContrasena.setBackground(new java.awt.Color(255, 255, 255));
        txtContrasena.setText("****************");
        txtContrasena.setBorder(null);
        txtContrasena.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtContrasenaMousePressed(evt);
            }
        });
        txtContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContrasenaActionPerformed(evt);
            }
        });
        jPanel1.add(txtContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 230, 30));

        btnGuardarAdmin.setText("Guardar");
        btnGuardarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarAdminActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, -1, -1));

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, -1, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        tblAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAdminMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAdmin);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 540, 470));

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        btnVolver.setIcon(new javax.swing.ImageIcon("C:\\Users\\Administrator\\Documents\\NetBeansProjects\\Gym-App\\src\\main\\resources\\volverr.png")); // NOI18N
        btnVolver.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverMouseExited(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(btnVolver)
                .addContainerGap(847, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVolver)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameAdminActionPerformed

    private void txtLastnameAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastnameAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastnameAdminActionPerformed

    private void txtMailAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMailAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMailAdminActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            int idAdmin = Integer.parseInt(txtIdAdmin.getText());
            String nombreAdmin = txtNameAdmin.getText();
            String apellidoAdmin = txtLastnameAdmin.getText();
            int edadAdmin = Integer.parseInt(txtAgeAdmin.getText());
            int telefonoAdmin = Integer.parseInt(txtPhoneAdmin.getText());
            String correoAdmin = txtMailAdmin.getText();
            String contrasena = txtContrasena.getText();

            Administrador cliente = new Administrador(idAdmin, nombreAdmin, apellidoAdmin, edadAdmin, telefonoAdmin, correoAdmin, contrasena);

            AdminDAO adminDAO = new AdminDAO();
            boolean clienteActualizado = adminDAO.editarAdministrador(cliente);
            cargarUsuario();
            limpiar();
            btnGuardarAdmin.setEnabled(true);
            txtContrasena.setEnabled(false);

            if (clienteActualizado) {
                JOptionPane.showMessageDialog(this, "Cliente actualizado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar el cliente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void btnVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseClicked
        PrincipalV1 principal = new PrincipalV1();
        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVolverMouseClicked

    private void btnVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseEntered
        btnVolver.setBackground(Color.red);
    }//GEN-LAST:event_btnVolverMouseEntered

    private void btnVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseExited
        btnVolver.setBackground(Color.white);
    }//GEN-LAST:event_btnVolverMouseExited

    private void txtContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContrasenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContrasenaActionPerformed

    private void txtIdAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdAdminMousePressed
        if (txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("");
            txtIdAdmin.setForeground(Color.black);
        }

        // Resetea los otros campos solo si no tienen datos personalizados
        if (txtNameAdmin.getText().isEmpty() || txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("Ingrese el nombre");
            txtNameAdmin.setForeground(Color.gray);
        }

        if (txtLastnameAdmin.getText().isEmpty() || txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("Ingrese el apellido");
            txtLastnameAdmin.setForeground(Color.gray);
        }

        if (txtAgeAdmin.getText().isEmpty() || txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("Ingrese la edad");
            txtAgeAdmin.setForeground(Color.gray);
        }

        if (txtPhoneAdmin.getText().isEmpty() || txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("Ingrese el telefono");
            txtPhoneAdmin.setForeground(Color.gray);
        }

        if (txtMailAdmin.getText().isEmpty() || txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("Ingrese el correo");
            txtMailAdmin.setForeground(Color.gray);
        }

        if (txtContrasena.getText().isEmpty() || txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("****************");
            txtContrasena.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtIdAdminMousePressed

    private void txtNameAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNameAdminMousePressed
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }

        if (txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("");
            txtNameAdmin.setForeground(Color.BLACK);
        }

        if (txtLastnameAdmin.getText().isEmpty() || txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("Ingrese el apellido");
            txtLastnameAdmin.setForeground(Color.gray);
        }

        if (txtAgeAdmin.getText().isEmpty() || txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("Ingrese la edad");
            txtAgeAdmin.setForeground(Color.gray);
        }

        if (txtPhoneAdmin.getText().isEmpty() || txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("Ingrese el telefono");
            txtPhoneAdmin.setForeground(Color.gray);
        }

        if (txtMailAdmin.getText().isEmpty() || txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("Ingrese el correo");
            txtMailAdmin.setForeground(Color.gray);
        }

        if (txtContrasena.getText().isEmpty() || txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("****************");
            txtContrasena.setForeground(Color.gray);
        }

    }//GEN-LAST:event_txtNameAdminMousePressed

    private void txtLastnameAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLastnameAdminMousePressed
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }

        if (txtNameAdmin.getText().isEmpty() || txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("Ingrese el nombre");
            txtNameAdmin.setForeground(Color.gray);
        }

        if (txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("");
            txtLastnameAdmin.setForeground(Color.BLACK);
        }

        if (txtAgeAdmin.getText().isEmpty() || txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("Ingrese la edad");
            txtAgeAdmin.setForeground(Color.gray);
        }

        if (txtPhoneAdmin.getText().isEmpty() || txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("Ingrese el telefono");
            txtPhoneAdmin.setForeground(Color.gray);
        }

        if (txtMailAdmin.getText().isEmpty() || txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("Ingrese el correo");
            txtMailAdmin.setForeground(Color.gray);
        }

        if (txtContrasena.getText().isEmpty() || txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("****************");
            txtContrasena.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtLastnameAdminMousePressed

    private void txtAgeAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAgeAdminMousePressed
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }

        if (txtNameAdmin.getText().isEmpty() || txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("Ingrese el nombre");
            txtNameAdmin.setForeground(Color.gray);
        }

        if (txtLastnameAdmin.getText().isEmpty() || txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("Ingrese el apellido");
            txtLastnameAdmin.setForeground(Color.gray);
        }

        if (txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("");
            txtAgeAdmin.setForeground(Color.BLACK);
        }

        if (txtPhoneAdmin.getText().isEmpty() || txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("Ingrese el telefono");
            txtPhoneAdmin.setForeground(Color.gray);
        }

        if (txtMailAdmin.getText().isEmpty() || txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("Ingrese el correo");
            txtMailAdmin.setForeground(Color.gray);
        }

        if (txtContrasena.getText().isEmpty() || txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("****************");
            txtContrasena.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtAgeAdminMousePressed

    private void txtPhoneAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPhoneAdminMousePressed
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }

        if (txtNameAdmin.getText().isEmpty() || txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("Ingrese el nombre");
            txtNameAdmin.setForeground(Color.gray);
        }

        if (txtLastnameAdmin.getText().isEmpty() || txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("Ingrese el apellido");
            txtLastnameAdmin.setForeground(Color.gray);
        }

        if (txtAgeAdmin.getText().isEmpty() || txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("Ingrese la edad");
            txtAgeAdmin.setForeground(Color.gray);
        }

        if (txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("");
            txtPhoneAdmin.setForeground(Color.BLACK);
        }

        if (txtMailAdmin.getText().isEmpty() || txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("Ingrese el correo");
            txtMailAdmin.setForeground(Color.gray);
        }

        if (txtContrasena.getText().isEmpty() || txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("****************");
            txtContrasena.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPhoneAdminMousePressed

    private void txtMailAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMailAdminMousePressed
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }

        if (txtNameAdmin.getText().isEmpty() || txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("Ingrese el nombre");
            txtNameAdmin.setForeground(Color.gray);
        }

        if (txtLastnameAdmin.getText().isEmpty() || txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("Ingrese el apellido");
            txtLastnameAdmin.setForeground(Color.gray);
        }

        if (txtAgeAdmin.getText().isEmpty() || txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("Ingrese la edad");
            txtAgeAdmin.setForeground(Color.gray);
        }

        if (txtPhoneAdmin.getText().isEmpty() || txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("Ingrese el telefono");
            txtPhoneAdmin.setForeground(Color.gray);
        }

        if (txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("");
            txtMailAdmin.setForeground(Color.BLACK);
        }

        if (txtContrasena.getText().isEmpty() || txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("****************");
            txtContrasena.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtMailAdminMousePressed

    private void txtContrasenaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtContrasenaMousePressed
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }

        if (txtNameAdmin.getText().isEmpty() || txtNameAdmin.getText().equals("Ingrese el nombre")) {
            txtNameAdmin.setText("Ingrese el nombre");
            txtNameAdmin.setForeground(Color.gray);
        }

        if (txtLastnameAdmin.getText().isEmpty() || txtLastnameAdmin.getText().equals("Ingrese el apellido")) {
            txtLastnameAdmin.setText("Ingrese el apellido");
            txtLastnameAdmin.setForeground(Color.gray);
        }

        if (txtAgeAdmin.getText().isEmpty() || txtAgeAdmin.getText().equals("Ingrese la edad")) {
            txtAgeAdmin.setText("Ingrese la edad");
            txtAgeAdmin.setForeground(Color.gray);
        }

        if (txtPhoneAdmin.getText().isEmpty() || txtPhoneAdmin.getText().equals("Ingrese el telefono")) {
            txtPhoneAdmin.setText("Ingrese el telefono");
            txtPhoneAdmin.setForeground(Color.gray);
        }

        if (txtMailAdmin.getText().isEmpty() || txtMailAdmin.getText().equals("Ingrese el correo")) {
            txtMailAdmin.setText("Ingrese el correo");
            txtMailAdmin.setForeground(Color.gray);
        }

        if (txtContrasena.getText().equals("****************")) {
            txtContrasena.setText("");
            txtContrasena.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtContrasenaMousePressed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            int idAdmin = Integer.parseInt(txtIdAdmin.getText());

            // Confirmar la eliminación
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar este administrador?",
                    "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                AdminDAO adminDAO = new AdminDAO();
                boolean clienteEliminado = adminDAO.eliminarAdministrador(idAdmin);
                cargarUsuario();  // Recargar la lista de usuarios
                limpiar();
                jSeparator7.setEnabled(true);
                txtContrasena.setEnabled(false);

                if (clienteEliminado) {
                    JOptionPane.showMessageDialog(this, "Administrador eliminado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    // Limpiar los campos de texto
                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el Administrador", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarAdminActionPerformed
        // Obtener los datos desde los campos de texto del formulario
        int idAdministrador = Integer.parseInt(txtIdAdmin.getText());  // Suponiendo que el ID es un número entero
        String nombreAdministrador = txtNameAdmin.getText();
        String apellidoAdministrador = txtLastnameAdmin.getText();
        int edadAdministrador = Integer.parseInt(txtAgeAdmin.getText());  // Suponiendo que la edad es un número entero
        int telefonoAdministrador = Integer.parseInt(txtPhoneAdmin.getText()); // Suponiendo que el teléfono es un número
        String correoAdministrador = txtMailAdmin.getText();

        // Generar la contraseña automáticamente
        String contrasenaGenerada = generarContrasena(nombreAdministrador, apellidoAdministrador, edadAdministrador);

        // Crear el objeto Administrador
        Administrador administrador = new Administrador(idAdministrador, nombreAdministrador, apellidoAdministrador, edadAdministrador, telefonoAdministrador, correoAdministrador, contrasenaGenerada);

        // Llamar al método del DAO para guardar el administrador en la base de datos
        AdminDAO adminDAO = new AdminDAO();
        boolean adminGuardado = adminDAO.insertarAdministrador(administrador);
        cargarUsuario();
        limpiar();

        if (adminGuardado) {
            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(this, "Administrador guardado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al guardar el administrador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarAdminActionPerformed

    private void tblAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAdminMouseClicked
        int fila = tblAdmin.getSelectedRow();
        if (fila >= 0) {
            btnGuardarAdmin.setEnabled(false);
            txtContrasena.setEnabled(true);
            txtIdAdmin.setText(tblAdmin.getValueAt(fila, 0).toString());
            txtNameAdmin.setText(tblAdmin.getValueAt(fila, 1).toString());
            txtLastnameAdmin.setText(tblAdmin.getValueAt(fila, 2).toString());
            txtAgeAdmin.setText(tblAdmin.getValueAt(fila, 3).toString());
            txtPhoneAdmin.setText(tblAdmin.getValueAt(fila, 4).toString());
            txtMailAdmin.setText(tblAdmin.getValueAt(fila, 5).toString());
            txtContrasena.setText(tblAdmin.getValueAt(fila, 6).toString());
        }
    }//GEN-LAST:event_tblAdminMouseClicked

    private String generarContrasena(String nombre, String apellido, int edad) {
        return nombre.substring(0, Math.min(3, nombre.length()))
                + apellido.substring(0, Math.min(4, apellido.length()))
                + edad
                + "_gym2025";
    }
    
    private void cargarUsuario() {
        try {
            // Obtener lista de membresías desde la base de datos
            AdminDAO adminDAO = new AdminDAO();
            List<Administrador> listaUsuarios = adminDAO.obtenerAdministradoresTotales();

            // Crear modelo de tabla
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID Admin");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Edad");
            modelo.addColumn("Telefono");
            modelo.addColumn("Correo");
            modelo.addColumn("Contrasena");

            // Agregar datos al modelo
            for (Administrador administrador : listaUsuarios) {
                modelo.addRow(new Object[]{
                    administrador.getId_Administrador(),
                    administrador.getNombre_Administrador(),
                    administrador.getApellido_Administrador(),
                    administrador.getEdad_Administrador(),
                    administrador.getNumero_Administrador(),
                    administrador.getCorreo_Administrador(),
                    administrador.getContrasena_Administrador()

                });
            }

            // Asignar modelo a la tabla
            tblAdmin.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar membresías: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void limpiar() {
        txtAgeAdmin.setText("");
        txtIdAdmin.setText("");
        txtLastnameAdmin.setText("");
        txtMailAdmin.setText("");
        txtNameAdmin.setText("");
        txtPhoneAdmin.setText("");
        txtContrasena.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminV1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardarAdmin;
    private javax.swing.JLabel btnVolver;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable tblAdmin;
    private javax.swing.JTextField txtAgeAdmin;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtIdAdmin;
    private javax.swing.JTextField txtLastnameAdmin;
    private javax.swing.JTextField txtMailAdmin;
    private javax.swing.JTextField txtNameAdmin;
    private javax.swing.JTextField txtPhoneAdmin;
    // End of variables declaration//GEN-END:variables
}
