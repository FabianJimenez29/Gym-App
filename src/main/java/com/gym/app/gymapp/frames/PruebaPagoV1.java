/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gym.app.gymapp.frames;

import com.gym.app.gymapp.SessionManager;
import com.gym.app.gymapp.TipoDePago;
import com.gym.app.gymapp.classes.Membresias;
import com.gym.app.gymapp.classes.Pagos;
import com.gym.app.gymapp.classes.Usuario;
import com.gym.app.gymapp.features.MembresiaDAO;
import com.gym.app.gymapp.features.PagosDAO;
import com.gym.app.gymapp.features.UsuarioDAO;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class PruebaPagoV1 extends javax.swing.JFrame {

    int xMouse;
    int yMouse;

    public PruebaPagoV1() {
        initComponents();

        SessionManager session = SessionManager.getInstance();
        if (!session.isAdmin()) {
            JOptionPane.showMessageDialog(this, "Acceso no autorizado", "Error", JOptionPane.ERROR_MESSAGE);
            dispose();
            return;
        }
        txtIdAdmin.setText(String.valueOf(session.getUserId()));
        txtIdAdmin.setEnabled(false);

        cargarTiposDePago();
        cargarClientes();
        cargarPagos();
        cargarMembresias();
        txtIdPago.setEnabled(false);
        txtFecha.setEnabled(false);
        txtIdPago.setVisible(false);
        txtFecha.setVisible(false);
        lbl1.setVisible(false);
        lbl2.setVisible(false);
        lbl9.setVisible(false);
        txtIdAdmin.setVisible(false);
        sep3.setVisible(false);
        se1.setVisible(false);
        se2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        cmbTipoPago = new javax.swing.JComboBox<>();
        cmbMembresia = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl9 = new javax.swing.JLabel();
        txtIdAdmin = new javax.swing.JTextField();
        sep3 = new javax.swing.JSeparator();
        header4 = new javax.swing.JPanel();
        btnVolver = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPagos = new javax.swing.JTable();
        lbl1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        se1 = new javax.swing.JSeparator();
        lbl2 = new javax.swing.JLabel();
        txtIdPago = new javax.swing.JTextField();
        se2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("ID Del Cliente");

        txtId.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtId.setForeground(new java.awt.Color(204, 204, 204));
        txtId.setText("Ingrese el ID");
        txtId.setBorder(null);
        txtId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdMousePressed(evt);
            }
        });

        cmbTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbMembresia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Tipo de Membresia");

        jLabel8.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Tipo de Pago");

        lbl9.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lbl9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl9.setText("ID Admin");

        txtIdAdmin.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtIdAdmin.setForeground(new java.awt.Color(204, 204, 204));
        txtIdAdmin.setText("Ingrese el ID");
        txtIdAdmin.setBorder(null);
        txtIdAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdAdminMousePressed(evt);
            }
        });
        txtIdAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdAdminActionPerformed(evt);
            }
        });

        header4.setBackground(new java.awt.Color(255, 255, 255));
        header4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                header4MouseDragged(evt);
            }
        });
        header4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                header4MousePressed(evt);
            }
        });

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/volverr.png"))); // NOI18N
        btnVolver.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverMouseExited(evt);
            }
        });

        javax.swing.GroupLayout header4Layout = new javax.swing.GroupLayout(header4);
        header4.setLayout(header4Layout);
        header4Layout.setHorizontalGroup(
            header4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(btnVolver)
                .addContainerGap(874, Short.MAX_VALUE))
        );
        header4Layout.setVerticalGroup(
            header4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVolver)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setText("Clientes");

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setText("Pagos");

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClientes);

        tblPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPagos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPagosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPagos);

        lbl1.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl1.setText("Fecha");

        txtFecha.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(204, 204, 204));
        txtFecha.setText("Ingrese la fecha");
        txtFecha.setBorder(null);
        txtFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFechaMousePressed(evt);
            }
        });

        lbl2.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lbl2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl2.setText("ID Pago");

        txtIdPago.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtIdPago.setForeground(new java.awt.Color(204, 204, 204));
        txtIdPago.setText("Ingrese el ID de pago");
        txtIdPago.setBorder(null);
        txtIdPago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdPagoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(243, 243, 243))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtId)
                                    .addComponent(cmbTipoPago, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbMembresia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnGuardar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEliminar))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtIdPago)
                                        .addComponent(se2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtFecha)
                                                .addComponent(se1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbl1))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtIdAdmin)
                                                .addComponent(sep3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lbl9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(header4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(5, 5, 5)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(se1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(txtIdAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addComponent(sep3, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(txtIdPago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(se2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txtIdMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdMousePressed
        if (txtId.getText().equals("Ingrese el ID")) {
            txtId.setText("");
            txtId.setForeground(Color.black);
        }
        // Resetea los otros campos solo si no tienen datos personalizados
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }
        if (txtFecha.getText().isEmpty() || txtFecha.getText().equals("Ingrese la fecha")) {
            txtFecha.setText("Ingrese la fecha");
            txtFecha.setForeground(Color.gray);
        }
        if (txtIdPago.getText().isEmpty() || txtIdPago.getText().equals("Ingrese el ID de pago")) {
            txtIdPago.setText("Ingrese el ID de pago");
            txtIdPago.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtIdMousePressed

    private void txtIdAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdAdminMousePressed
        if (txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("");
            txtIdAdmin.setForeground(Color.black);
        }
        // Resetea los otros campos solo si no tienen datos personalizados
        if (txtId.getText().isEmpty() || txtId.getText().equals("Ingrese el ID")) {
            txtId.setText("Ingrese el ID");
            txtId.setForeground(Color.gray);
        }
        if (txtFecha.getText().isEmpty() || txtFecha.getText().equals("Ingrese la fecha")) {
            txtFecha.setText("Ingrese la fecha");
            txtFecha.setForeground(Color.gray);
        }
        if (txtIdPago.getText().isEmpty() || txtIdPago.getText().equals("Ingrese el ID de pago")) {
            txtIdPago.setText("Ingrese el ID de pago");
            txtIdPago.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtIdAdminMousePressed

    private void btnVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseClicked
        PrincipalV1 principal = new PrincipalV1();
        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVolverMouseClicked

    private void btnVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseEntered
        btnVolver.setBackground(Color.red);
    }//GEN-LAST:event_btnVolverMouseEntered

    private void btnVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseExited
        btnVolver.setBackground(Color.white);
    }//GEN-LAST:event_btnVolverMouseExited

    private void header4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_header4MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_header4MouseDragged

    private void header4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_header4MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_header4MousePressed

    private void cargarTiposDePago() {
        cmbTipoPago.removeAllItems(); // Limpiar ComboBox
        for (TipoDePago tipo : TipoDePago.values()) {
            cmbTipoPago.addItem(tipo.name()); // Agregar opciones del enum
        }
    }

    private void cargarClientes() {
        try {
            UsuarioDAO usuariosDao = new UsuarioDAO();
            List<Usuario> listaClientes = usuariosDao.obtenerClientes();

            if (listaClientes == null || listaClientes.isEmpty()) {

                return;
            }

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");

            for (Usuario usuario : listaClientes) {
                modelo.addRow(new Object[]{usuario.getId_Cliente(), usuario.getNombre_Cliente(), usuario.getApellido_Cliente()});
            }
            tblClientes.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void cargarPagos() {
        try {
            // Obtener lista de pagos desde la base de datos
            PagosDAO pagosDAO = new PagosDAO();
            List<Pagos> listaPagos = pagosDAO.obtenerPagos();

            // Crear modelo de tabla
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID Pago");
            modelo.addColumn("ID Admin");
            modelo.addColumn("ID Cliente");
            modelo.addColumn("Tipo de Pago");
            modelo.addColumn("Fecha");
            modelo.addColumn("Membresia");

            // Agregar datos al modelo
            for (Pagos pago : listaPagos) {
                modelo.addRow(new Object[]{
                    pago.getId_Pago(),
                    pago.getId_Administrador(),
                    pago.getId_Cliente(),
                    pago.getTipo_Pago().name(),
                    pago.getFecha_Pago(),
                    pago.getTipo_Membresia()
                });
            }

            // Asignar modelo a la tabla
            tblPagos.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar pagos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarMembresias() {
        try {
            // Obtener lista de membresías desde la base de datos
            MembresiaDAO membresiasDAO = new MembresiaDAO();
            List<Membresias> listaMembresias = membresiasDAO.obtenerMembresia(); // Método que obtiene todas las membresías

            // Limpiar el comboBox
            cmbMembresia.removeAllItems();

            // Verificar si la lista tiene datos
            if (listaMembresias == null || listaMembresias.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron membresías.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Agregar nombres de membresías al comboBox
            cmbMembresia.removeAllItems();
            cmbMembresia.addItem("Seleccione Un Tipo");
            for (Membresias membresia : listaMembresias) {
                cmbMembresia.addItem(membresia.getNombre_Membresia()); // Suponiendo que tienes un método getNombre()
            }

            // Verificar que la carga fue correcta
            System.out.println("Membresías cargadas correctamente");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar membresías: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            int idCliente = Integer.parseInt(txtId.getText());
            TipoDePago tipoPago = TipoDePago.valueOf(cmbTipoPago.getSelectedItem().toString());
            int idAdmin = Integer.parseInt(txtIdAdmin.getText());
            String membresia = cmbMembresia.getSelectedItem().toString();

            // Crear un objeto de pago con la fecha actual y sin ID de pago
            Pagos pago = new Pagos(0, idAdmin, idCliente, tipoPago, new java.sql.Date(System.currentTimeMillis()), membresia);

            // Insertar el pago
            PagosDAO pagosDAO = new PagosDAO();
            boolean exito = pagosDAO.insertarPago(pago);
            SessionManager session = SessionManager.getInstance();
            txtIdAdmin.setText(String.valueOf(session.getUserId()));
            txtIdAdmin.setEnabled(false);

            if (exito) {
                JOptionPane.showMessageDialog(this, "Pago registrado correctamente");
                cargarTiposDePago();
                cargarClientes();
                cargarPagos();
                cargarMembresias();
                limpiar();
            } else {
                JOptionPane.showMessageDialog(this, "Error al registrar el pago", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese datos válidos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int selectedRow = tblPagos.getSelectedRow();
        if (selectedRow >= 0) {
            int idPago = Integer.parseInt(tblPagos.getValueAt(selectedRow, 0).toString());  // Obtener el ID del pago

            // Confirmar la eliminación
            int response = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar este pago?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                // Eliminar el pago
                PagosDAO pagosDAO = new PagosDAO();
                boolean exito = pagosDAO.eliminarPago(idPago);
                SessionManager session = SessionManager.getInstance();
                txtIdAdmin.setText(String.valueOf(session.getUserId()));
                txtIdAdmin.setEnabled(false);// Este método debería eliminar el pago por ID

                if (exito) {
                    JOptionPane.showMessageDialog(this, "Pago eliminado correctamente");
                    cargarPagos();
                    limpiar();
                    btnGuardar.setEnabled(true);
                    txtIdAdmin.setEnabled(true);

                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el pago", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un pago para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            // Obtener el ID de pago de los campos
            int idPago = Integer.parseInt(txtIdPago.getText());
            int idCliente = Integer.parseInt(txtId.getText());
            TipoDePago tipoPago = TipoDePago.valueOf(cmbTipoPago.getSelectedItem().toString());
            int idAdmin = Integer.parseInt(txtIdAdmin.getText());
            String membresia = cmbMembresia.getSelectedItem().toString();

            // Crear un objeto de pago con los datos editados
            Pagos pago = new Pagos(idPago, idAdmin, idCliente, tipoPago, new java.sql.Date(System.currentTimeMillis()), membresia);

            // Actualizar el pago en la base de datos
            PagosDAO pagosDAO = new PagosDAO();
            boolean exito = pagosDAO.editarPago(pago);
            SessionManager session = SessionManager.getInstance();
            txtIdAdmin.setText(String.valueOf(session.getUserId()));
            txtIdAdmin.setEnabled(false);// Este método debería actualizar el pago según su ID

            if (exito) {
                JOptionPane.showMessageDialog(this, "Pago actualizado correctamente");
                cargarPagos();
                limpiar();
                btnGuardar.setEnabled(true);
                txtIdAdmin.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar el pago", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese datos válidos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtIdAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdAdminActionPerformed

    private void tblPagosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPagosMouseClicked
        int row = tblPagos.rowAtPoint(evt.getPoint());
        if (row >= 0) {
            btnGuardar.setEnabled(false);
            txtIdAdmin.setEnabled(false);

            String idPago = tblPagos.getValueAt(row, 0).toString();
            String idAdmin = tblPagos.getValueAt(row, 1).toString();
            String idCliente = tblPagos.getValueAt(row, 2).toString();
            String tipoPago = tblPagos.getValueAt(row, 3).toString();
            String fechaPago = tblPagos.getValueAt(row, 4).toString();
            String membresia = tblPagos.getValueAt(row, 5).toString();

            // Cargar los datos de la fila seleccionada en los campos de texto
            txtId.setText(idCliente);  // O el campo que corresponda con el ID del cliente
            txtIdAdmin.setText(idAdmin);
            cmbTipoPago.setSelectedItem(tipoPago);
            cmbMembresia.setSelectedItem(membresia);
            txtIdPago.setText(idPago);
            txtFecha.setText(fechaPago);
        }
    }//GEN-LAST:event_tblPagosMouseClicked

    private void txtFechaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaMousePressed
        if (txtFecha.getText().equals("Ingrese la fecha")) {
            txtFecha.setText("");
            txtFecha.setForeground(Color.black);
        }
        // Resetea los otros campos solo si no tienen datos personalizados
        if (txtId.getText().isEmpty() || txtId.getText().equals("Ingrese el ID")) {
            txtId.setText("Ingrese el ID");
            txtId.setForeground(Color.gray);
        }
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }
        if (txtIdPago.getText().isEmpty() || txtIdPago.getText().equals("Ingrese el ID de pago")) {
            txtIdPago.setText("Ingrese el ID de pago");
            txtIdPago.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtFechaMousePressed

    private void txtIdPagoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdPagoMousePressed
        if (txtIdPago.getText().equals("Ingrese el ID de pago")) {
            txtIdPago.setText("");
            txtIdPago.setForeground(Color.black);
        }
        // Resetea los otros campos solo si no tienen datos personalizados
        if (txtId.getText().isEmpty() || txtId.getText().equals("Ingrese el ID")) {
            txtId.setText("Ingrese el ID");
            txtId.setForeground(Color.gray);
        }
        if (txtIdAdmin.getText().isEmpty() || txtIdAdmin.getText().equals("Ingrese el ID")) {
            txtIdAdmin.setText("Ingrese el ID");
            txtIdAdmin.setForeground(Color.gray);
        }
        if (txtFecha.getText().isEmpty() || txtFecha.getText().equals("Ingrese la fecha")) {
            txtFecha.setText("Ingrese la fecha");
            txtFecha.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtIdPagoMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PruebaPagoV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PruebaPagoV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PruebaPagoV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PruebaPagoV1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PruebaPagoV1().setVisible(true);
            }
        });
    }

    public void limpiar() {
        txtId.setText("");
        txtIdAdmin.setText("");
        cmbMembresia.setSelectedItem("Seleccione Un Tipo");
        cmbTipoPago.setSelectedItem("Seleccione Una Opcion");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel btnVolver;
    private javax.swing.JComboBox<String> cmbMembresia;
    private javax.swing.JComboBox<String> cmbTipoPago;
    private javax.swing.JPanel header4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl9;
    private javax.swing.JSeparator se1;
    private javax.swing.JSeparator se2;
    private javax.swing.JSeparator sep3;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblPagos;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdAdmin;
    private javax.swing.JTextField txtIdPago;
    // End of variables declaration//GEN-END:variables
}
